# docker-compose up --build -d app
# fish: open http://(docker-compose port app 3000)
# bash: open "http://$(docker-compose port app 3000)"
# docker-compose scale app=2
# docker-compose port --index=1 app 3000 # port1
# docker-compose port --index=2 app 3000 # port2

# 1. setup .env file
# 2. for `docker-compose run` see solution here: https://github.com/docker/compose/issues/4369
version: '2.1'
services:
#  # app
#  app:
#    env_file: .env
#    restart: unless-stopped
#    depends_on:
#      mongodb:
#        condition: service_healthy
#      rabbitmq-stomp:
#        condition: service_healthy
#    environment:
#      DB_HOST: db
#      STOMP_BROKER_RELAY_HOST: broker
#    build:
#      context: .
#      dockerfile: ./src/main/docker/app/Dockerfile
#    ports:
#      ##scale-out is disabled (will thrown an error)
#      #- '80:3000'
#      # scale-out is enabled, but port will be randomly generated (docker ps)
#      - 3000
#    links:
#      - 'mongodb:db'
#      - 'rabbitmq-stomp:broker'
#    volumes:
#      - 'app-data:/opt'
#    networks:
#      - public
#      - backoffice
  mongodb:
    env_file: .env
    image: healthcheck/mongo
    environment:
      MONGO_PORT_27017_TCP_PORT: 27017
    ports:
    - 27017:27017
    volumes:
    - mongodb-data:/data/db
    networks:
    - backoffice
  mongodb-admin:
    env_file: .env
    image: mongo-express:0.38
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
    ports:
    - 8081:8081
    links:
    - mongodb
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - backoffice
      - development
  rabbitmq-stomp:
    env_file: .env
    image: mvertes/alpine-mongo:3.2.10-3
    build:
      context: .
      dockerfile: ./src/main/docker/rabbitmq-stomp/Dockerfile
    ports:
      - 15672:15672
      - 61613:61613
    volumes:
      - rabbitmq-stomp-data:/var/lib/rabbitmq
    networks:
      - backoffice
      - development
volumes:
  app-data: {}
  mongodb-data: {}
  rabbitmq-stomp-data: {}
networks:
  development:
    driver: bridge
  backoffice:
    driver: bridge
  public:
    driver: bridge
