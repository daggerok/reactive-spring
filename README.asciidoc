= stomp-and-sockjs-with-rabbit-for-scale image:https://travis-ci.org/daggerok/reactive-spring.svg?branch=stomp-and-sockjs-with-rabbit-for-scale["Build Status", link="https://travis-ci.org/daggerok/reactive-spring"]

as far scale out with plain WebSocket is almost impossible next step is use sockjs with stomp messaging on top of rabbitmq

build

[source,bash]
----
gradle clean assemble
docker-compose build --force-rm
----

start and scale uot app up to 2 instances

[source,bash]
----
docker-compose up -d
docker-compose scale app=2
----

open clients for both and try send messages (clients should be able to send chat messages each other)

[source,bash]
----
open http://$(docker-compose port --index=1 app 3000)
open http://$(docker-compose port --index=2 app 3000)
----

cleanup

[source,bash]
----
docker-compose down -v --remove-orphans
----

http://http://docs.spring.io/spring/docs/5.0.0.NEW-DOC/spring-framework-reference/web.html#websocket-stomp[read more]
https://ordina-jworks.github.io/reactive/2016/12/12/Reactive-Programming-Spring-Reactor.html[read too]
http://assets.spring.io/wp/WebSocketBlogPost.html[and this]
https://spring.io/blog/2010/06/14/understanding-amqp-the-protocol-used-by-rabbitmq/[too]
https://github.com/rstoyanchev/spring-websocket-portfolio[...]
