# docker-compose up --build -d app
# fish: open http://(docker-compose port app 3000)
# bash: open "http://$(docker-compose port app 3000)"
# docker-compose scale app=2
# docker-compose port --index=1 app 3000 # port1
# docker-compose port --index=2 app 3000 # port2

# 1. setup .env file
# 2. for `docker-compose run` see solution here: https://github.com/docker/compose/issues/4369
version: '2.1'
services:
  # app
  app:
    env_file: .env
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      DB_HOST: db
    build:
      dockerfile: ./src/main/docker/Dockerfile
      context: .
    ports:
      ##scale-out is disabled (will thrown an error)
      #- '80:3000'
      # scale-out is enabled, but port will be randomly generated (docker ps)
      - '3000'
    links:
      - 'mongodb:db'
    volumes:
      - app-data:/opt
    networks:
      - public
      - backoffice
  mongodb:
    container_name: mongodb
    healthcheck:
      test: 'netstat -tuplen | grep 27017 || exit 1'
    image: mvertes/alpine-mongo:3.2.10-3
    ports:
    - 27017:27017
    volumes:
    - mongodb-data:/data/db
    networks:
    - backoffice
  mongodb-admin:
    container_name: mongodb-admin
    depends_on:
      mongodb:
        condition: service_healthy
    image: ind3x/rpi-mongo-express:0.32.0-alpine
    ports:
    - 8081:8081
    links:
    - mongodb:mongodb
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
    volumes:
    - mongodb-admin-data:/node_modules
    networks:
    - backoffice
    - development
volumes:
  app-data: {}
  mongodb-data: {}
  mongodb-admin-data: {}
networks:
  development:
    driver: bridge
  backoffice:
    driver: bridge
  public:
    driver: bridge
