= plain-websocket-test-scaleout-using-docker image:https://travis-ci.org/daggerok/reactive-spring.svg?branch=plain-websocket-test-scaleout-using-docker["Build Status", link="https://travis-ci.org/daggerok/reactive-spring"]

see plain-websocket branch
here we try scale out using docker to see no possibility communicate
so next step is using messaging (stomp with rabbitmq or activemq)

build

[source,bash]
----
gradle clean assemble
docker-compose build --force-rm
----

start and scale uot app up to 2 instances

[source,bash]
----
docker-compose up -d
docker-compose scale app=2
----

find instances ports

[source,bash]
----
docker-compose port --index=1 app 3000 # port1
docker-compose port --index=2 app 3000 # port2
----

open clients for both and try send messages (clients aren't able to see each other)

[source,bash]
----
open http://localhost:$port1/?wsport=$port1
open http://localhost:$port2/?wsport=$port2
----

cleanup

[source,bash]
----
docker-compose down -v --remove-orphans
----
