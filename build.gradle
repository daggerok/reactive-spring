plugins {
  id "java"
  id "idea"
  id "eclipse"
  id "application"
  id "cn.bestwu.propdeps" version "0.0.10"
  id "cn.bestwu.propdeps-idea" version "0.0.10"
  id "cn.bestwu.propdeps-maven" version "0.0.10"
  id "cn.bestwu.propdeps-eclipse" version "0.0.10"
  id "org.springframework.boot" version "2.0.1.RELEASE"
  id "io.spring.dependency-management" version "1.0.5.RELEASE"
}

group "daggerok"
version "0.0.1"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

def mainClass = "daggerok.Application"
mainClassName = "$mainClass"

bootJar {
  launchScript()
  mainClassName = "$mainClass"
}

// `gradle dev bootRun`: The following profiles are active: dev
["dev"].each { taskName ->
  tasks.create(taskName) {
    bootRun {
      systemProperty "spring.profiles.active", taskName
    }
  }
}

// `gradle build bootRun`: The following profiles are active: test
[test].each {
  it.doFirst {
    bootRun {
      systemProperty "spring.profiles.active", "test"
    }
  }
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-webflux"
  compileOnly "org.projectlombok:lombok"
  testCompileOnly "org.projectlombok:lombok"
  compileOnly "org.springframework.boot:spring-boot-configuration-processor"
  testCompileOnly "org.springframework.boot:spring-boot-configuration-processor"
  testCompile "org.springframework.boot:spring-boot-starter-test"
}

compileJava.dependsOn(processResources)

task wrapper(type: Wrapper) {
  gradleVersion = "4.7"
  distributionType = "ALL"
}

idea {
  module {
    downloadSources = true
  }
}

eclipse {
  classpath {
    downloadSources = true
  }
}

defaultTasks("clean", "build")
